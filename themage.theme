<?php
/**
 * @file
 * Contains theme override and preprocess functions.
 */

/**
 * Implements template_preprocess_html().
 */
function themage_preprocess_html(&$vars) {
  // Add Lobster font.
  drupal_add_css('http://fonts.googleapis.com/css?family=Lobster', array('type' => 'external'));

  // Site is responsive, make sure initial scale is appropriate.
  $viewport = array(
    '#tag' => 'meta',
    '#attributes' => array(
      'name' => 'viewport',
      'content' => 'width=device-width, initial-scale=1, maximum-scale=1',
    ),
  );
  drupal_add_html_head($viewport, 'viewport');
}

/**
 * Implements template_preprocess_region().
 */
function themage_preprocess_region(&$vars) {
  // Add sidebar class to sidebar regions.
  if ($vars['region'] == 'sidebar_first' || $vars['region'] == 'sidebar_second') {
    $vars['classes_array'][] = 'sidebar';
  }
}

/**
 * Implements template_preprocess_node().
 */
function themage_preprocess_node(&$vars) {
  $vars['submitted'] = themage_submitted($vars['name'], $vars['created']);
}

/**
 * Implements template_preprocess_comment().
 */
function themage_preprocess_comment(&$vars) {
  $vars['submitted'] = themage_submitted($vars['author'], $vars['comment']->created);
}

/**
 * Formats a "submitted by" statement.
 *
 * This function adds an html5 "time" element to the
 * submitted by statement, for semantics.
 *
 * @param string $author
 *   The author's name (optionally with html tags) to display.
 * @param int $datetime
 *   The creation time, in UNIX timestamp format.
 *
 * @return string
 *   To be used as "submitted by".
 */
function themage_submitted($author, $datetime) {
  $date_string = format_date($datetime, 'custom', 'F j, Y');
  $time_string = format_date($datetime, 'custom', 'c');
  return t('Submitted by !username on !datetime',
    array(
      '!username' => $author,
      '!datetime' => "<time datetime='$time_string'>$date_string</time>",
    )
  );
}

/**
 * Implements template_preprocess_block().
 * TODO: Use the "search" role on search box
 */
function themage_preprocess_block(&$vars) {
  $vars['attributes']['role'] = 'complementary';
}

/**
 * Implements template_breadcrumb().
 */
function themage_breadcrumb(&$vars) {
  $breadcrumb = $vars['breadcrumb'];

  // Don't show anything if there's no breadcrumb or it shouldn't be displayed.
  if (empty($breadcrumb) || !theme_get_setting('breadcrumb_display')) {
    return;
  }

  // Optionally, add title.
  if (theme_get_setting('breadcrumb_title')) {
    $breadcrumb[] = drupal_get_title();
  }

  // Create the string to display from the breadcrumb array.
  $separator = check_plain(theme_get_setting('breadcrumb_separator'));
  $breadcrumb_string = implode($separator, $breadcrumb);

  $prefix = check_plain(theme_get_setting('breadcrumb_prefix'));

  return $prefix . $breadcrumb_string;
}
